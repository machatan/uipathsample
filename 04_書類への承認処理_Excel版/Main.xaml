<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="866.4,3191.2" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="20">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="経費精算" sap:VirtualizedContainerService.HintSize="622.4,3026.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="getmaillist" />
      <Variable x:TypeArguments="x:String" Default="[Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile),&quot;Desktop&quot;) +&quot;\経費精算処理フォルダ&quot;]" Name="folderpath" />
      <Variable x:TypeArguments="x:String" Name="FileName" />
      <Variable x:TypeArguments="x:String" Name="getDatetime" />
      <Variable x:TypeArguments="snm:MailMessage" Name="test" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="現在の日時を取得（ファイル名につけるため）" sap:VirtualizedContainerService.HintSize="580.8,60" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[getDatetime]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("yyyyMMddHHmmss")]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="経費精算処理フォルダをデスクトップに作成" sap:VirtualizedContainerService.HintSize="580.8,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[folderpath]" />
    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[folderpath +&quot;\&quot; + getDatetime + &quot;_出張経費精算書.xlsx&quot;]" DisplayName="ファイル名を変更しながら経費精算書を処理フォルダに格納" sap:VirtualizedContainerService.HintSize="580.8,160" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path=".\出張経費精算書.xlsx" />
    <ui:Comment DisplayName="コメント" sap:VirtualizedContainerService.HintSize="580.8,113.6" sap2010:WorkflowViewState.IdRef="Comment_3" Text="// Excelアプリケーションスコープで開くと、アドインを読み込まないため、正常に動作しない。そのため、openAplicationで開き、アドインを読み込ませてから、処理を実施している。" />
    <ui:OpenApplication ApplicationWindow="{x:Null}" TimeoutMS="{x:Null}" WorkingDirectory="{x:Null}" Arguments="[folderpath +&quot;\&quot; + getDatetime + &quot;_出張経費精算書.xlsx&quot;]" DisplayName="アプリケーションを開く 'EXCEL.EXE 出張経費精算書.xlsx'" FileName="C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE" sap:VirtualizedContainerService.HintSize="580.8,2359.2" sap2010:WorkflowViewState.IdRef="OpenApplication_2" InformativeScreenshot="4a4901eadc5c79aef2c12cfd64a6c63e" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;">
      <ui:OpenApplication.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="547.2,2212" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="check" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:UiElementExists DisplayName="要素の有無を検出（編集を有効にするボタンを確認）" Exists="[check]" sap:VirtualizedContainerService.HintSize="505.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="208833b1-3f17-4910-aaac-539160fdfbbb" InformativeScreenshot="c4fd4b4dcb93de8c98b61a5e66c4c073" Selector="&lt;uia cls='MsoCommandBar' helpText='[ ] ツールバー' /&gt;&lt;uia cls='NetUIElement' name='保護ビュー' /&gt;&lt;uia cls='NetUILabel' name='編集を有効にする(E)' /&gt;" TimeoutMS="5000">
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[check]" DisplayName="条件分岐（編集ボタンがあればクリックを行い、編集できるようにする。）" sap:VirtualizedContainerService.HintSize="505.6,256.8" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="クリック 'テキスト  編集を有効にする(E)'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3e1ce0fe-6a8f-4ee1-8fe6-a16ba2be5bd0" InformativeScreenshot="c4fd4b4dcb93de8c98b61a5e66c4c073" Selector="&lt;uia cls='MsoCommandBar' helpText='[ ] ツールバー' /&gt;&lt;uia cls='NetUIElement' name='保護ビュー' /&gt;&lt;uia cls='NetUILabel' name='編集を有効にする(E)' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
              </If.Then>
            </If>
            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="入力先セルを選択" sap:VirtualizedContainerService.HintSize="505.6,107.2" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2d04044c-df96-47d5-9d82-7810f5c04296" InformativeScreenshot="f43dbdb4c06b80df3bd9e5eedc3901c3" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&lt;uia automationid='Grid' name='グリッド' role='データ グリッド' /&gt;&lt;uia name='&amp;quot;F&amp;quot; 7' role='項目' tableCol='6' tableRow='7' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="メニューを開く（右クリックと同様）" sap:VirtualizedContainerService.HintSize="505.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_16" Key="f10" KeyModifiers="Shift" SpecialKey="True">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b7500ff8-61b4-4168-af9a-82087f71e5e4" InformativeScreenshot="5f111497656431a4208c7c5c895517b8" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&lt;uia automationid='Grid' name='グリッド' role='データ グリッド' /&gt;&lt;uia name='&amp;quot;F&amp;quot; 7' role='項目' tableCol='6' tableRow='7' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="電子印鑑を選択1(2回押す必要がある)" sap:VirtualizedContainerService.HintSize="505.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_17" Key="E" KeyModifiers="Shift">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b7500ff8-61b4-4168-af9a-82087f71e5e4" InformativeScreenshot="e56c4e6b56cbde1eaa5b607b4da3f430" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='NetUIHWND' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="電子印鑑を選択2(2回押す必要がある)" sap:VirtualizedContainerService.HintSize="505.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_18" Key="E" KeyModifiers="Shift">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b7500ff8-61b4-4168-af9a-82087f71e5e4" InformativeScreenshot="e56c4e6b56cbde1eaa5b607b4da3f430" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='NetUIHWND' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="決定処理" sap:VirtualizedContainerService.HintSize="505.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_19" Key="enter" KeyModifiers="Shift" SpecialKey="True">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b7500ff8-61b4-4168-af9a-82087f71e5e4" InformativeScreenshot="e56c4e6b56cbde1eaa5b607b4da3f430" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='NetUIHWND' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="データネーム印押印を選択" sap:VirtualizedContainerService.HintSize="505.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_20" Key="D" KeyModifiers="Shift">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b7500ff8-61b4-4168-af9a-82087f71e5e4" InformativeScreenshot="15a3d8349fbe63bb20adac788fb4d506" Selector="&lt;wnd app='excel.exe' cls='Net UI Tool Window' idx='*' /&gt;&lt;wnd cls='NetUIHWND' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="上書き保存" sap:VirtualizedContainerService.HintSize="505.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_21" Key="s" KeyModifiers="Ctrl">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="af588e93-c621-4f5b-b10b-1f458b5092bc" InformativeScreenshot="d372a930b37c8aeb39c91609146202cf" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&lt;uia automationid='Grid' name='グリッド' role='データ グリッド' /&gt;&lt;uia name='&amp;quot;F&amp;quot; 7' role='項目' tableCol='6' tableRow='7' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="ファイルを閉じる" sap:VirtualizedContainerService.HintSize="505.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_22" Key="w" KeyModifiers="Ctrl">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="af588e93-c621-4f5b-b10b-1f458b5092bc" InformativeScreenshot="d372a930b37c8aeb39c91609146202cf" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' /&gt;&lt;uia automationid='Grid' name='グリッド' role='データ グリッド' /&gt;&lt;uia name='&amp;quot;F&amp;quot; 7' role='項目' tableCol='6' tableRow='7' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Excelを閉じる" sap:VirtualizedContainerService.HintSize="505.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_23" Key="f4" KeyModifiers="Alt" SpecialKey="True">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="004c6c66-1718-485f-9be8-b207cf702288" InformativeScreenshot="27f9e43ffbb16385f897adf98e8db36f" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Excel' idx='*' /&gt;&lt;uia cls='MsoCommandBar' helpText='[Ribbon] ツールバー' /&gt;&lt;uia cls='NetUIOfficeCaption' name='Excel' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
          </Sequence>
        </ActivityAction>
      </ui:OpenApplication.Body>
    </ui:OpenApplication>
  </Sequence>
</Activity>